#!/bin/bash
# Script used for mounting/unmounting the box or gdrive directory
# ~/.davfs2/secrets - A file where you put your box credentials
# /etc/fstab - Specify filesystem mountpoint and type

SCRIPT_DESC="Script used for mounting/unmounting the box or gdrive directory"
commons_dir="/usr/local/bin/common"

# Include common functions
. ${commons_dir}/common.sh

# Include root functions
. ${commons_dir}/sudoUtil.sh

checkSudoPrivileges

function printHelpAndExit {
    echo "USAGE"
    echo "  ${SCRIPT_NAME} [--mount | --unmount] [--box | --gdrive] --help]"
    echo
    echo "DESCRIPTION"
    echo "  ${SCRIPT_DESC}"
    echo
    echo "OPTIONS"
    echo "  --mount,  --m         : Select mount action (default)"
    echo "  --umount, --u         : Select unmount action"
    echo
    echo "  --box                 : Mount Box directory (default)"
    echo "  --gdrive              : Mount Gdrive directory"
    echo
    echo "  --help,   --h         : Show this help"
    exit 1
}

function createMountPoint {
    if [ ! -d "${1}" ]; then
        logInfo "${1}: No such file or directory (will try to create one)"
        mkdir ${1}
        chown nvelickovic10 ${1}
        chgrp nvelickovic10 ${1}
        logInfo "${1}: Directory successfuly created"
    else
        logInfo "${1}: Directory already exists"
    fi
}

function removeMountPoint {
    rm -r ${1}
    logInfo "${1}: Directory successfuly removed"
}

function mountGdrive {
    if mount | grep ${LOCAL_MOUNT_DIR} > /dev/null; then
        logError "${LOCAL_MOUNT_DIR}: Already mounted"
        return 0
    fi

    createMountPoint ${LOCAL_MOUNT_DIR}

    if [ -d "${LOCAL_MOUNT_DIR}" ]; then
        sudo -u nvelickovic10 google-drive-ocamlfuse -label nvelickovic10 ${LOCAL_MOUNT_DIR}
        return 0
    fi

    logError "${LOCAL_MOUNT_DIR}: Directory not existing!!!"
    exit 1
}

function unmountGdrive {
    if ! mount | grep ${LOCAL_MOUNT_DIR} > /dev/null; then
        logError "${LOCAL_MOUNT_DIR}: Already unmounted"
        return 0
    fi

    fusermount -u ${LOCAL_MOUNT_DIR}
    removeMountPoint ${LOCAL_MOUNT_DIR}
}

function mountBox {
    if mount | grep ${LOCAL_MOUNT_DIR} > /dev/null; then
        logError "${LOCAL_MOUNT_DIR}: Already mounted"
        return 0
    fi

    createMountPoint ${LOCAL_MOUNT_DIR}

    if [ -d "${LOCAL_MOUNT_DIR}" ]; then
        sudo -u nvelickovic10 mount ${LOCAL_MOUNT_DIR}
        return 0
    fi

    logError "${LOCAL_MOUNT_DIR}: Directory not existing!!!"
    exit 1
}

function unmountBox {
    if ! mount | grep ${LOCAL_MOUNT_DIR} > /dev/null; then
        logError "${LOCAL_MOUNT_DIR}: Already unmounted"
        return 0
    fi

    umount ${LOCAL_MOUNT_DIR}
    removeMountPoint ${LOCAL_MOUNT_DIR}
}

ACTION="mount"
SERVICE="Box"

# Parsing command line arguments
for arg; do
    case "${arg}" in
        --mount|--m)
            ACTION="mount"
        ;;
        --unmount|--u)
            ACTION="unmount"
        ;;
        --box)
            SERVICE="Box"
        ;;
        --gdrive)
            SERVICE="Gdrive"
        ;;
        --help)
            printHelpAndExit
        ;;
    esac
done

LOCAL_MOUNT_DIR="/media/nvelickovic10/$SERVICE"
COMMAND="${ACTION}${SERVICE}"

logInfo "ACTION: ${ACTION}"
logInfo "SERVICE: ${SERVICE}"
logInfo "LOCAL_MOUNT_DIR: ${LOCAL_MOUNT_DIR}"
logInfo "COMMAND: ${COMMAND}\n"

eval ${COMMAND}

# END